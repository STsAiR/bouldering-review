Using contract tester version 0.7.6
(1/3)🧬Compiling contract: test_20849751_1747620969.sol
[✅PASS]Compilation
(2/3)🤖Generating test case for: test_20849751_1747620969.sol
[✅PASS]Read contract
[ℹ️INFO] Contract file already exists in destination, skipping adjust.
[⚠️WARNING]No </think> tag found in input
[✅PASS]Test case generation
[✅PASS]Write test contract file
(3/3)🧪Running tests in test_20849751_1747620969.t.sol
(🧪Attempt 1/3)
[ℹ️INFO] Encountered compilation error, applying automatic fixer
[⚠️WARNING]No </think> tag found in input
[✅PASS]Corrected test contract with compilation error
[✅PASS]Updated test file
(🧪Attempt 2/3)
[ℹ️INFO] Encountered compilation error, applying automatic fixer
[⚠️WARNING]No </think> tag found in input
[✅PASS]Corrected test contract with compilation error
[✅PASS]Updated test file
(🧪Attempt 3/3)
[DEBUG]STDOUT
Compiling 1 files with Solc 0.8.28
Solc 0.8.28 finished in 813.57ms
Compiler run successful with warnings:
Warning (2072): Unused local variable.
   --> test/test_20849751_1747620969.t.sol:199:32:
    |
199 |         (uint256[] memory ids, string[] memory names, string[] memory locations, uint256[] memory meanOverallScores) = gymReview.getAllGyms();
    |                                ^^^^^^^^^^^^^^^^^^^^^

Warning (2072): Unused local variable.
   --> test/test_20849751_1747620969.t.sol:199:55:
    |
199 |         (uint256[] memory ids, string[] memory names, string[] memory locations, uint256[] memory meanOverallScores) = gymReview.getAllGyms();
    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^

Warning (2072): Unused local variable.
   --> test/test_20849751_1747620969.t.sol:199:82:
    |
199 |         (uint256[] memory ids, string[] memory names, string[] memory locations, uint256[] memory meanOverallScores) = gymReview.getAllGyms();
    |                                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Warning (2072): Unused local variable.
   --> test/test_20849751_1747620969.t.sol:239:51:
    |
239 |         (uint256 currentBlock, uint256 timestamp, address coinbase, uint256 gasLimit) = gymReview.getContractInfo();
    |                                                   ^^^^^^^^^^^^^^^^

Warning (2018): Function state mutability can be restricted to view
   --> test/test_20849751_1747620969.t.sol:237:5:
    |
237 |     function testGetContractInfo() public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Warning (2018): Function state mutability can be restricted to view
   --> test/test_20849751_1747620969.t.sol:250:5:
    |
250 |     function testGetHash() public {
    |     ^ (Relevant source part starts here and spans across multiple lines).


Ran 16 tests for test/test_20849751_1747620969.t.sol:ContractTest
[PASS] testAddGymDuplicate() (gas: 166430)
Logs:
  Owner is: 0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496
  Running testAddGymDuplicate

Traces:
  [166430] ContractTest::testAddGymDuplicate()
    ├─ [0] console::log("Running testAddGymDuplicate") [staticcall]
    │   └─ ← [Stop] 
    ├─ [149397] BoulderingGymReview::addGym("Gym Duplicate", "Uptown")
    │   ├─ emit GymAdded(gymId: 1, name: "Gym Duplicate", location: "Uptown", addedBy: ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Stop] 
    ├─ [0] VM::expectRevert(custom error 0xf28dceb3:  .Gym with this name and location already exists)
    │   └─ ← [Return] 
    ├─ [3267] BoulderingGymReview::addGym("Gym Duplicate", "Uptown")
    │   └─ ← [Revert] revert: Gym with this name and location already exists
    └─ ← [Stop] 

[PASS] testAddGymEmptyLocation() (gas: 13497)
Logs:
  Owner is: 0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496
  Running testAddGymEmptyLocation

Traces:
  [13497] ContractTest::testAddGymEmptyLocation()
    ├─ [0] console::log("Running testAddGymEmptyLocation") [staticcall]
    │   └─ ← [Stop] 
    ├─ [0] VM::expectRevert(custom error 0xf28dceb3:  Gym location cannot be empty)
    │   └─ ← [Return] 
    ├─ [1018] BoulderingGymReview::addGym("Climb High", "")
    │   └─ ← [Revert] revert: Gym location cannot be empty
    └─ ← [Stop] 

[PASS] testAddGymEmptyName() (gas: 13486)
Logs:
  Owner is: 0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496
  Running testAddGymEmptyName

Traces:
  [13486] ContractTest::testAddGymEmptyName()
    ├─ [0] console::log("Running testAddGymEmptyName") [staticcall]
    │   └─ ← [Stop] 
    ├─ [0] VM::expectRevert(custom error 0xf28dceb3:  Gym name cannot be empty)
    │   └─ ← [Return] 
    ├─ [988] BoulderingGymReview::addGym("", "Downtown")
    │   └─ ← [Revert] revert: Gym name cannot be empty
    └─ ← [Stop] 

[PASS] testAddGymValid() (gas: 169959)
Logs:
  Owner is: 0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496
  Running testAddGymValid

Traces:
  [169959] ContractTest::testAddGymValid()
    ├─ [0] console::log("Running testAddGymValid") [staticcall]
    │   └─ ← [Stop] 
    ├─ [149397] BoulderingGymReview::addGym("Climb High", "Downtown")
    │   ├─ emit GymAdded(gymId: 1, name: "Climb High", location: "Downtown", addedBy: ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Stop] 
    ├─ [4201] BoulderingGymReview::gyms(1) [staticcall]
    │   └─ ← [Return] 1, "Climb High", "Downtown", ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 0, 0, 0, false
    ├─ [0] VM::assertEq(1, 1, "Gym ID should be 1 after first addition") [staticcall]
    │   └─ ← [Return] 
    └─ ← [Stop] 

[PASS] testGetAllGyms() (gas: 446548)
Logs:
  Owner is: 0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496
  Running testGetAllGyms

Traces:
  [466448] ContractTest::testGetAllGyms()
    ├─ [0] console::log("Running testGetAllGyms") [staticcall]
    │   └─ ← [Stop] 
    ├─ [149397] BoulderingGymReview::addGym("Gym One", "Location One")
    │   ├─ emit GymAdded(gymId: 1, name: "Gym One", location: "Location One", addedBy: ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Stop] 
    ├─ [127497] BoulderingGymReview::addGym("Gym Two", "Location Two")
    │   ├─ emit GymAdded(gymId: 2, name: "Gym Two", location: "Location Two", addedBy: ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Stop] 
    ├─ [127500] BoulderingGymReview::addGym("Gym Three", "Location Three")
    │   ├─ emit GymAdded(gymId: 3, name: "Gym Three", location: "Location Three", addedBy: ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Stop] 
    ├─ [24084] BoulderingGymReview::removeGym(2)
    │   ├─ emit GymRemoved(gymId: 2, removedBy: ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Stop] 
    ├─ [13464] BoulderingGymReview::getAllGyms() [staticcall]
    │   └─ ← [Return] [1, 3], ["Gym One", "Gym Three"], ["Location One", "Location Three"], [0, 0]
    ├─ [0] VM::assertEq(2, 2, "There should be two active gyms") [staticcall]
    │   └─ ← [Return] 
    ├─ [0] VM::assertEq(1, 1, "First active gym should be Gym 1") [staticcall]
    │   └─ ← [Return] 
    ├─ [0] VM::assertEq(3, 3, "Second active gym should be Gym 3") [staticcall]
    │   └─ ← [Return] 
    └─ ← [Stop] 

[PASS] testGetContractInfo() (gas: 15428)
Logs:
  Owner is: 0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496
  Running testGetContractInfo

Traces:
  [15428] ContractTest::testGetContractInfo()
    ├─ [0] console::log("Running testGetContractInfo") [staticcall]
    │   └─ ← [Stop] 
    ├─ [779] BoulderingGymReview::getContractInfo() [staticcall]
    │   └─ ← [Return] 1, 1, 0x0000000000000000000000000000000000000000, 1073741824 [1.073e9]
    ├─ [0] VM::assertTrue(true, "Block number should be > 0") [staticcall]
    │   └─ ← [Return] 
    ├─ [0] VM::assertTrue(true, "Timestamp should be > 0") [staticcall]
    │   └─ ← [Return] 
    ├─ [0] VM::assertTrue(true, "Gas limit should be > 0") [staticcall]
    │   └─ ← [Return] 
    └─ ← [Stop] 

[PASS] testGetHash() (gas: 14736)
Logs:
  Owner is: 0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496
  Running testGetHash

Traces:
  [14736] ContractTest::testGetHash()
    ├─ [0] console::log("Running testGetHash") [staticcall]
    │   └─ ← [Stop] 
    ├─ [1559] BoulderingGymReview::getHash("TestString") [staticcall]
    │   └─ ← [Return] 0xf7b0fa9abb55f964a32fff2a807a1e8a034cbef65cc8683aeddd5cfdaee4fc04
    ├─ [0] VM::assertEq(112033968291615044225510924108118980103363007809619657353209738965962277059588 [1.12e77], 112033968291615044225510924108118980103363007809619657353209738965962277059588 [1.12e77], "Hash output should match expected value") [staticcall]
    │   └─ ← [Return] 
    └─ ← [Stop] 

[PASS] testGetReviews() (gas: 427019)
Logs:
  Owner is: 0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496
  Running testGetReviews

Traces:
  [446919] ContractTest::testGetReviews()
    ├─ [0] console::log("Running testGetReviews") [staticcall]
    │   └─ ← [Stop] 
    ├─ [149397] BoulderingGymReview::addGym("Review List Gym", "Downtown")
    │   ├─ emit GymAdded(gymId: 1, name: "Review List Gym", location: "Downtown", addedBy: ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Stop] 
    ├─ [158232] BoulderingGymReview::submitReview(1, 4, 4, 4, 4, "Good gym")
    │   ├─ emit ReviewSubmitted(gymId: 1, reviewer: ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], cleanliness: 4, size: 4, difficulty: 4, overall: 4, reviewText: "Good gym")
    │   └─ ← [Stop] 
    ├─ [76632] BoulderingGymReview::submitReview(1, 5, 5, 5, 5, "Excellent gym")
    │   ├─ emit ReviewSubmitted(gymId: 1, reviewer: ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], cleanliness: 5, size: 5, difficulty: 5, overall: 5, reviewText: "Excellent gym")
    │   └─ ← [Stop] 
    ├─ [8401] BoulderingGymReview::getReviews(1) [staticcall]
    │   └─ ← [Return] [Review({ reviewer: 0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496, cleanliness: 4, size: 4, difficulty: 4, overall: 4, reviewText: "Good gym", timestamp: 1 }), Review({ reviewer: 0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496, cleanliness: 5, size: 5, difficulty: 5, overall: 5, reviewText: "Excellent gym", timestamp: 1 })]
    ├─ [0] VM::assertEq(2, 2, "There should be 2 reviews") [staticcall]
    │   └─ ← [Return] 
    ├─ [0] VM::assertEq(4, 4, "First review overall rating should be 4") [staticcall]
    │   └─ ← [Return] 
    ├─ [0] VM::assertEq(5, 5, "Second review overall rating should be 5") [staticcall]
    │   └─ ← [Return] 
    ├─ [24084] BoulderingGymReview::removeGym(1)
    │   ├─ emit GymRemoved(gymId: 1, removedBy: ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Stop] 
    ├─ [0] VM::expectRevert(custom error 0xf28dceb3:  Gym has been removed)
    │   └─ ← [Return] 
    ├─ [1082] BoulderingGymReview::getReviews(1) [staticcall]
    │   └─ ← [Revert] revert: Gym has been removed
    └─ ← [Stop] 

[PASS] testOwnerImmutability() (gas: 167883)
Logs:
  Owner is: 0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496
  Running testOwnerImmutability

Traces:
  [167883] ContractTest::testOwnerImmutability()
    ├─ [0] console::log("Running testOwnerImmutability") [staticcall]
    │   └─ ← [Stop] 
    ├─ [0] VM::prank(0x7E5F4552091A69125d5DfCb7b8C2659029395Bdf)
    │   └─ ← [Return] 
    ├─ [149397] BoulderingGymReview::addGym("Immutable Gym", "No Change")
    │   ├─ emit GymAdded(gymId: 1, name: "Immutable Gym", location: "No Change", addedBy: 0x7E5F4552091A69125d5DfCb7b8C2659029395Bdf)
    │   └─ ← [Stop] 
    ├─ [2507] BoulderingGymReview::owner() [staticcall]
    │   └─ ← [Return] ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]
    ├─ [0] VM::assertTrue(true, "Owner was updated by arbitrary caller") [staticcall]
    │   └─ ← [Return] 
    └─ ← [Stop] 

[PASS] testRemoveGymByAddedBy() (gas: 174796)
Logs:
  Owner is: 0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496
  Running testRemoveGymByAddedBy

Traces:
  [194696] ContractTest::testRemoveGymByAddedBy()
    ├─ [0] console::log("Running testRemoveGymByAddedBy") [staticcall]
    │   └─ ← [Stop] 
    ├─ [149397] BoulderingGymReview::addGym("Solo Remove", "East Side")
    │   ├─ emit GymAdded(gymId: 1, name: "Solo Remove", location: "East Side", addedBy: ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Stop] 
    ├─ [24084] BoulderingGymReview::removeGym(1)
    │   ├─ emit GymRemoved(gymId: 1, removedBy: ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Stop] 
    ├─ [4201] BoulderingGymReview::gyms(1) [staticcall]
    │   └─ ← [Return] 1, "Solo Remove", "East Side", ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 0, 0, 0, true
    ├─ [0] VM::assertTrue(true, "Gym should be marked as removed") [staticcall]
    │   └─ ← [Return] 
    └─ ← [Stop] 

[PASS] testRemoveGymByOwner() (gas: 179157)
Logs:
  Owner is: 0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496
  Running testRemoveGymByOwner

Traces:
  [199057] ContractTest::testRemoveGymByOwner()
    ├─ [0] console::log("Running testRemoveGymByOwner") [staticcall]
    │   └─ ← [Stop] 
    ├─ [0] VM::prank(0x7E5F4552091A69125d5DfCb7b8C2659029395Bdf)
    │   └─ ← [Return] 
    ├─ [149397] BoulderingGymReview::addGym("Community Gym", "West End")
    │   ├─ emit GymAdded(gymId: 1, name: "Community Gym", location: "West End", addedBy: 0x7E5F4552091A69125d5DfCb7b8C2659029395Bdf)
    │   └─ ← [Stop] 
    ├─ [26240] BoulderingGymReview::removeGym(1)
    │   ├─ emit GymRemoved(gymId: 1, removedBy: ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Stop] 
    ├─ [4201] BoulderingGymReview::gyms(1) [staticcall]
    │   └─ ← [Return] 1, "Community Gym", "West End", 0x7E5F4552091A69125d5DfCb7b8C2659029395Bdf, 0, 0, 0, true
    ├─ [0] VM::assertTrue(true, "Gym should be marked as removed after owner's removal") [staticcall]
    │   └─ ← [Return] 
    └─ ← [Stop] 

[PASS] testRemoveGymUnauthorized() (gas: 171114)
Logs:
  Owner is: 0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496
  Running testRemoveGymUnauthorized

Traces:
  [171114] ContractTest::testRemoveGymUnauthorized()
    ├─ [0] console::log("Running testRemoveGymUnauthorized") [staticcall]
    │   └─ ← [Stop] 
    ├─ [0] VM::prank(0x7E5F4552091A69125d5DfCb7b8C2659029395Bdf)
    │   └─ ← [Return] 
    ├─ [149397] BoulderingGymReview::addGym("Unauthorized Test", "Midtown")
    │   ├─ emit GymAdded(gymId: 1, name: "Unauthorized Test", location: "Midtown", addedBy: 0x7E5F4552091A69125d5DfCb7b8C2659029395Bdf)
    │   └─ ← [Stop] 
    ├─ [0] VM::prank(0x2B5AD5c4795c026514f8317c7a215E218DcCD6cF)
    │   └─ ← [Return] 
    ├─ [0] VM::expectRevert(custom error 0xf28dceb3:  !Not authorized to remove this gym)
    │   └─ ← [Return] 
    ├─ [3446] BoulderingGymReview::removeGym(1)
    │   └─ ← [Revert] revert: Not authorized to remove this gym
    └─ ← [Stop] 

[PASS] testRemoveNonExistentGym() (gas: 14869)
Logs:
  Owner is: 0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496
  Running testRemoveNonExistentGym

Traces:
  [14869] ContractTest::testRemoveNonExistentGym()
    ├─ [0] console::log("Running testRemoveNonExistentGym") [staticcall]
    │   └─ ← [Stop] 
    ├─ [0] VM::expectRevert(custom error 0xf28dceb3:  Gym does not exist)
    │   └─ ← [Return] 
    ├─ [2919] BoulderingGymReview::removeGym(99)
    │   └─ ← [Revert] revert: Gym does not exist
    └─ ← [Stop] 

[PASS] testSubmitReviewInvalidRating() (gas: 184621)
Logs:
  Owner is: 0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496
  Running testSubmitReviewInvalidRating

Traces:
  [184621] ContractTest::testSubmitReviewInvalidRating()
    ├─ [0] console::log("Running testSubmitReviewInvalidRating") [staticcall]
    │   └─ ← [Stop] 
    ├─ [149400] BoulderingGymReview::addGym("Invalid Rating Gym", "North End")
    │   ├─ emit GymAdded(gymId: 1, name: "Invalid Rating Gym", location: "North End", addedBy: ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Stop] 
    ├─ [0] VM::expectRevert(custom error 0xf28dceb3:  Cleanliness rating must be 1-5)
    │   └─ ← [Return] 
    ├─ [2102] BoulderingGymReview::submitReview(1, 0, 4, 3, 4, "Bad cleanliness rating")
    │   └─ ← [Revert] revert: Cleanliness rating must be 1-5
    ├─ [0] VM::expectRevert(custom error 0xf28dceb3:  Size rating must be 1-5)
    │   └─ ← [Return] 
    ├─ [2194] BoulderingGymReview::submitReview(1, 5, 6, 3, 4, "Bad size rating")
    │   └─ ← [Revert] revert: Size rating must be 1-5
    ├─ [0] VM::expectRevert(custom error 0xf28dceb3:  Difficulty rating must be 1-5)
    │   └─ ← [Return] 
    ├─ [2246] BoulderingGymReview::submitReview(1, 5, 4, 0, 4, "Bad difficulty rating")
    │   └─ ← [Revert] revert: Difficulty rating must be 1-5
    ├─ [0] VM::expectRevert(custom error 0xf28dceb3:  Overall rating must be 1-5)
    │   └─ ← [Return] 
    ├─ [2338] BoulderingGymReview::submitReview(1, 5, 4, 3, 6, "Bad overall rating")
    │   └─ ← [Revert] revert: Overall rating must be 1-5
    ├─ [0] VM::expectRevert(custom error 0xf28dceb3:  eview text cannot be empty)
    │   └─ ← [Return] 
    ├─ [2368] BoulderingGymReview::submitReview(1, 5, 4, 3, 4, "")
    │   └─ ← [Revert] revert: Review text cannot be empty
    └─ ← [Stop] 

[PASS] testSubmitReviewToRemovedGym() (gas: 170485)
Logs:
  Owner is: 0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496
  Running testSubmitReviewToRemovedGym

Traces:
  [190385] ContractTest::testSubmitReviewToRemovedGym()
    ├─ [0] console::log("Running testSubmitReviewToRemovedGym") [staticcall]
    │   └─ ← [Stop] 
    ├─ [149397] BoulderingGymReview::addGym("Removed Gym", "South Side")
    │   ├─ emit GymAdded(gymId: 1, name: "Removed Gym", location: "South Side", addedBy: ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Stop] 
    ├─ [24084] BoulderingGymReview::removeGym(1)
    │   ├─ emit GymRemoved(gymId: 1, removedBy: ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Stop] 
    ├─ [0] VM::expectRevert(custom error 0xf28dceb3:  Gym has been removed)
    │   └─ ← [Return] 
    ├─ [2050] BoulderingGymReview::submitReview(1, 5, 4, 3, 4, "Review for removed gym")
    │   └─ ← [Revert] revert: Gym has been removed
    └─ ← [Stop] 

[PASS] testSubmitReviewValid() (gas: 331631)
Logs:
  Owner is: 0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496
  Running testSubmitReviewValid

Traces:
  [331631] ContractTest::testSubmitReviewValid()
    ├─ [0] console::log("Running testSubmitReviewValid") [staticcall]
    │   └─ ← [Stop] 
    ├─ [149400] BoulderingGymReview::addGym("Review Gym", "Central Park")
    │   ├─ emit GymAdded(gymId: 1, name: "Review Gym", location: "Central Park", addedBy: ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Stop] 
    ├─ [158232] BoulderingGymReview::submitReview(1, 5, 4, 3, 4, "Great experience!")
    │   ├─ emit ReviewSubmitted(gymId: 1, reviewer: ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], cleanliness: 5, size: 4, difficulty: 3, overall: 4, reviewText: "Great experience!")
    │   └─ ← [Stop] 
    ├─ [4201] BoulderingGymReview::gyms(1) [staticcall]
    │   └─ ← [Return] 1, "Review Gym", "Central Park", ContractTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 1, 4, 4, false
    ├─ [0] VM::assertEq(1, 1, "Review count should be 1") [staticcall]
    │   └─ ← [Return] 
    ├─ [0] VM::assertEq(4, 4, "Total overall rating should be 4") [staticcall]
    │   └─ ← [Return] 
    ├─ [0] VM::assertEq(4, 4, "Mean overall score should be 4") [staticcall]
    │   └─ ← [Return] 
    └─ ← [Stop] 

Suite result: ok. 16 passed; 0 failed; 0 skipped; finished in 3.89ms (2.78ms CPU time)

Ran 1 test suite in 1.27s (3.89ms CPU time): 16 tests passed, 0 failed, 0 skipped (16 total tests)

🧹Start Cleaning
[✅PASS]Moved test file to 'finished'
